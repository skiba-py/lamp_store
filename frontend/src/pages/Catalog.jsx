import { Box, Heading, Text, useToast, Spinner } from '@chakra-ui/react';
import { FaRegLightbulb } from 'react-icons/fa';
import ProductList from '../components/ProductList';
import { ordersApi, productsApi } from '../services/api';
import { useState, useEffect } from 'react';

export default function Catalog() {
  const toast = useToast();
  const [loading, setLoading] = useState(false);
  const [products, setProducts] = useState([]);
  const [fetching, setFetching] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchProducts = async () => {
      setFetching(true);
      try {
        const data = await productsApi.getProducts();
        setProducts(data);
      } catch (err) {
        setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–æ–≤–∞—Ä–æ–≤');
      } finally {
        setFetching(false);
      }
    };
    fetchProducts();
  }, []);

  const handleAddToCart = async (product) => {
    setLoading(true);
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞
      await productsApi.checkProductAvailability(product.id, 1);

      const orderData = {
        user_id: "123e4567-e89b-12d3-a456-426614174000",
        status: "pending",
        total: product.price,
        items: [
          {
            product_id: product.id.toString(),
            quantity: 1,
            price: product.price
          }
        ]
      };

      await ordersApi.createOrder(orderData);
      
      toast({
        title: "–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É",
        description: `${product.name} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É`,
        status: "success",
        duration: 3000,
        isClosable: true,
      });
    } catch (error) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: error.message || "–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É",
        status: "error",
        duration: 3000,
        isClosable: true,
      });
    } finally {
      setLoading(false);
    }
  };

  return (
    <Box id="catalog" w="100%" minH="100vh">
      {(loading || fetching) && (
        <Box position="fixed" top="50%" left="50%" transform="translate(-50%, -50%)" zIndex="1000">
          <Spinner size="xl" color="blue.500" />
        </Box>
      )}
      <Box mb={8} p={6} bg="white" borderRadius="xl" boxShadow="md" display="flex" alignItems="center" gap={4}>
        <Box fontSize="3xl" color="yellow.400"><FaRegLightbulb /></Box>
        <Box>
          <Text fontSize="xl" fontWeight="bold" mb={2}>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω –ª–∞–º–ø LAMPS!</Text>
          <Text fontSize="md" color="gray.700">
            –í –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ –≤—ã –Ω–∞–π–¥—ë—Ç–µ –æ–≥—Ä–æ–º–Ω—ã–π –≤—ã–±–æ—Ä –ª–∞–º–ø –¥–ª—è –ª—é–±–æ–≥–æ –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è: –æ—Ç –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏—Ö –¥–æ —É–º–Ω—ã—Ö RGB-–ª–∞–º–ø —Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ. –ú—ã –≤–µ—Ä–∏–º, —á—Ç–æ —Å–≤–µ—Ç —Å–ø–æ—Å–æ–±–µ–Ω —Å–æ–∑–¥–∞–≤–∞—Ç—å –∞—Ç–º–æ—Å—Ñ–µ—Ä—É —É—é—Ç–∞, –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å –Ω–∞ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ –∏ –¥–∞–∂–µ —ç–∫–æ–Ω–æ–º–∏—Ç—å –≤–∞—à–∏ —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–∏—é!<br/><br/>
            <b>–ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å?</b> <br/>
            <ul style={{marginLeft: 20}}>
              <li>üí° –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –±—Ä–µ–Ω–¥—ã –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏</li>
              <li>üåà –õ–∞–º–ø—ã –¥–ª—è –¥–æ–º–∞, –æ—Ñ–∏—Å–∞, —Ä–∞—Å—Ç–µ–Ω–∏–π –∏ –≤–µ—á–µ—Ä–∏–Ω–æ–∫</li>
              <li>üöö –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –∏ –ø—Ä–∏—è—Ç–Ω—ã–µ —Ü–µ–Ω—ã</li>
              <li>üéÅ –ü–æ–¥–∞—Ä–æ—á–Ω—ã–µ —É–ø–∞–∫–æ–≤–∫–∏ –∏ –∞–∫—Ü–∏–∏ –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é</li>
            </ul>
            <br/>
            –û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –º–∏—Ä —Å–≤–µ—Ç–∞ –≤–º–µ—Å—Ç–µ —Å –Ω–∞–º–∏ ‚Äî –≤—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—é –∏–¥–µ–∞–ª—å–Ω—É—é –ª–∞–º–ø—É –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!
          </Text>
        </Box>
      </Box>
      <Heading as="h1" size="lg" mb={6} w="100%" textAlign="left">–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤</Heading>
      {error && <Text color="red.500" mb={4}>{error}</Text>}
      <ProductList products={products} onAddToCart={handleAddToCart} />
    </Box>
  );
}
